---
  - name: "Check if {{ item.product }} -> {{ item.reposet }} ({{ ansible_architecture }}) requires releasever"
    command:
      hammer --csv --username '{{ sat_user }}' --password '{{ sat_pass }}' repository-set available-repositories --product '{{ item.product }}' --name '{{ item.reposet }}' --organization '{{ sat_org }}'
    register: have_releasever
    ignore_errors: True
  - name: "Enable {{ item.product }} -> {{ item.reposet }} ({{ ansible_architecture }}) without releasever set"
    command:
      hammer --username '{{ sat_user }}' --password '{{ sat_pass }}' repository-set enable --product '{{ item.product }}' --name '{{ item.reposet }}' --basearch '{{ ansible_architecture }}' --organization '{{ sat_org }}'
    when: "repository_list.stdout.find(item.repo) == -1 and have_releasever.stdout_lines[1] | match('^[^,]+,[^,]+,,.*$')"
    ignore_errors: True
    register: enable_repo
  - name: "Enable {{ item.product }} -> {{ item.reposet }} ({{ ansible_architecture }}) with releasever set"
    command:
      hammer --username '{{ sat_user }}' --password '{{ sat_pass }}' repository-set enable --product '{{ item.product }}' --name '{{ item.reposet }}' --basearch '{{ ansible_architecture }}' --organization '{{ sat_org }}' --releasever '{{ sat_releasever }}'
    when: "repository_list.stdout.find(item.repo) == -1 and not have_releasever.stdout_lines[1] | match('^[^,]+,[^,]+,,.*$')"
    ignore_errors: True
    register: enable_repo
  - debug: var=enable_repo
    when: "enable_repo.rc is not defined or enable_repo.rc != 0"
...
